CREATE TABLE articulos(
    sku text,
    proveedor text,
    sku_interno text,
    codigo_barras text,
    nombre text,
    modelo text,
    categoria text,
    condicion_producto text,
    marca_producto text,
    variante text,
    largo_cm numeric,
    ancho_cm numeric,
    alto_cm numeric,
    peso_kg numeric,
    imagen1 text,
    costo numeric,
    stock integer,
    descripcion text,
    status text NOT NULL DEFAULT 'activo'::text,
    garantia_meses integer,
    tipo_variante text,
    peso_volumetrico numeric(10,3),
    imagen2 text,
    imagen3 text,
    imagen4 text,
    clave_producto_sat text,
    unidad_medida_sat text,
    clave_unidad_medida_sat text,
    en_almacen boolean NOT NULL DEFAULT false,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now(),
    CONSTRAINT articulos_status_check CHECK (status = ANY (ARRAY['activo'::text, 'inactivo'::text]))
);
CREATE UNIQUE INDEX articulos_sku_uniq ON public.articulos USING btree (sku);
CREATE INDEX ix_articulos_proveedor ON public.articulos USING btree (proveedor);
CREATE INDEX ix_articulos_categoria ON public.articulos USING btree (categoria);
CREATE INDEX ix_articulos_sku_interno ON public.articulos USING btree (sku_interno);
CREATE INDEX ix_articulos_nombre ON public.articulos USING btree (nombre);
CREATE INDEX ix_articulos_status ON public.articulos USING btree (status);
CREATE INDEX ix_articulos_stock ON public.articulos USING btree (stock);

CREATE TABLE brands(
    id SERIAL NOT NULL,
    name text NOT NULL,
    code text NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX brands_code_unique ON public.brands USING btree (code);

CREATE TABLE carriers(
    id SERIAL NOT NULL,
    name text NOT NULL,
    code text NOT NULL,
    api_endpoint text,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX carriers_code_unique ON public.carriers USING btree (code);


CREATE TABLE channels(
    id SERIAL NOT NULL,
    code text NOT NULL,
    name text NOT NULL,
    color text,
    icon text,
    is_active boolean NOT NULL DEFAULT true,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX channels_code_unique ON public.channels USING btree (code);

CREATE TABLE combos(
    sku_combo text NOT NULL,
    codigo_marca text NOT NULL,
    titulo text,
    descripcion text,
    activo boolean NOT NULL DEFAULT true,
    categoria text NOT NULL,
    PRIMARY KEY(sku_combo),
    CONSTRAINT combos_codigo_marca_fkey FOREIGN key(codigo_marca) REFERENCES marcas(codigo),
    CONSTRAINT combos_categoria_check CHECK (categoria = ANY (ARRAY['compuesto'::text, 'permisivo'::text]))
);
CREATE INDEX ix_combos_codigo_marca ON public.combos USING btree (codigo_marca);

CREATE TABLE combo_items(
    id SERIAL NOT NULL,
    sku_combo text NOT NULL,
    sku_marca text NOT NULL,
    cantidad integer NOT NULL,
    PRIMARY KEY(id),
    CONSTRAINT combo_items_sku_combo_fkey FOREIGN key(sku_combo) REFERENCES combos(sku_combo),
    CONSTRAINT combo_items_sku_marca_fkey FOREIGN key(sku_marca) REFERENCES catalogo_productos(sku),
    CONSTRAINT combo_items_cantidad_check CHECK (cantidad >= 1)
);
CREATE INDEX ix_combo_items_sku_combo ON public.combo_items USING btree (sku_combo);
CREATE INDEX ix_combo_items_sku_marca ON public.combo_items USING btree (sku_marca);

CREATE TABLE marcas(
    codigo text NOT NULL,
    nombre text NOT NULL,
    PRIMARY KEY(codigo)
);

CREATE TABLE logistic_services(
    id SERIAL NOT NULL,
    code text NOT NULL,
    name text NOT NULL,
    active boolean NOT NULL DEFAULT true,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone NOT NULL DEFAULT now(),
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX logistic_services_code_key ON public.logistic_services USING btree (code);


CREATE TABLE notes(
    id SERIAL NOT NULL,
    user_id integer NOT NULL,
    content text NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);


CREATE TABLE order_items(
    id SERIAL NOT NULL,
    order_id bigint NOT NULL,
    sku text,
    quantity integer NOT NULL,
    price numeric,
    created_at timestamp without time zone DEFAULT now(),
    shopify_product_id text,
    shopify_variant_id text,
    title text,
    variant_title text,
    PRIMARY KEY(id),
    CONSTRAINT order_items_order_fk FOREIGN key(order_id) REFERENCES orders(id)
);
CREATE INDEX ix_order_items_shopify_product ON public.order_items USING btree (shopify_product_id);
CREATE INDEX ix_order_items_shopify_variant ON public.order_items USING btree (shopify_variant_id);
CREATE INDEX ix_order_items_sku ON public.order_items USING btree (sku);
CREATE INDEX idx_order_items_order_id ON public.order_items USING btree (order_id);


CREATE TABLE orders(
    id SERIAL NOT NULL,
    order_id text NOT NULL,
    customer_name text,
    total_amount numeric,
    status text NOT NULL DEFAULT 'pending'::text,
    created_at timestamp without time zone DEFAULT now(),
    name text,
    order_number text,
    financial_status text,
    fulfillment_status text,
    currency text DEFAULT 'MXN'::text,
    subtotal_price numeric,
    customer_email text,
    tags text[],
    ship_name text,
    ship_phone text,
    ship_address1 text,
    ship_city text,
    ship_province text,
    ship_country text,
    ship_zip text,
    shopify_created_at timestamp with time zone,
    shopify_updated_at timestamp with time zone,
    shopify_processed_at timestamp with time zone,
    shopify_closed_at timestamp with time zone,
    shopify_cancelled_at timestamp with time zone,
    cancel_reason text,
    order_note text,
    note_attributes jsonb,
    shop_id integer,
    updated_at timestamp without time zone DEFAULT now(),
    PRIMARY KEY(id),
    CONSTRAINT orders_channel_fk FOREIGN key(shop_id) REFERENCES channels(id)
);
CREATE UNIQUE INDEX uniq_shop_order ON public.orders USING btree (shop_id, order_id);
CREATE INDEX idx_orders_shop_created_at ON public.orders USING btree (shop_id, shopify_created_at);
CREATE INDEX ix_orders_channel ON public.orders USING btree (shop_id);
CREATE INDEX ix_orders_shop ON public.orders USING btree (shop_id);
CREATE INDEX ix_orders_shop_created ON public.orders USING btree (shop_id, created_at);
CREATE INDEX orders_created_idx ON public.orders USING btree (created_at DESC);
CREATE INDEX orders_fulfillment_status_idx ON public.orders USING btree (fulfillment_status);
CREATE INDEX orders_shopify_created_idx ON public.orders USING btree (shopify_created_at DESC);
CREATE UNIQUE INDEX ux_orders_shop_order ON public.orders USING btree (shop_id, order_id);


CREATE TABLE products(
    id SERIAL NOT NULL,
    id_shopify text NOT NULL,
    shop_id integer NOT NULL,
    title text NOT NULL,
    vendor text,
    product_type text,
    status text NOT NULL DEFAULT 'active'::text,
    tags text[],
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    sku text,
    PRIMARY KEY(id)
);
CREATE INDEX ix_products_shop ON public.products USING btree (shop_id);
CREATE INDEX products_shop_id_idx ON public.products USING btree (shop_id);
CREATE UNIQUE INDEX ux_products_shop_shopify ON public.products USING btree (shop_id, id_shopify);

CREATE TABLE service_carriers(
    service_id integer NOT NULL,
    carrier_id integer NOT NULL,
    PRIMARY KEY(service_id,carrier_id),
    CONSTRAINT service_carriers_service_id_fkey FOREIGN key(service_id) REFERENCES logistic_services(id),
    CONSTRAINT service_carriers_carrier_id_fkey FOREIGN key(carrier_id) REFERENCES carriers(id)
);


CREATE TABLE tickets(
    id SERIAL NOT NULL,
    ticket_number SERIAL NOT NULL,
    order_id bigint NOT NULL,
    status text NOT NULL DEFAULT 'open'::text,
    notes text,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    service_id integer,
    carrier_id integer,
    tracking_number text,
    label_url text,
    service_level text,
    package_count integer NOT NULL DEFAULT 1,
    weight_kg numeric(10,2),
    length_cm numeric(10,2),
    width_cm numeric(10,2),
    height_cm numeric(10,2),
    external_refs jsonb,
    shipped_at timestamp with time zone,
    delivered_at timestamp with time zone,
    canceled_at timestamp with time zone,
    sla_due_at timestamp with time zone,
    PRIMARY KEY(id),
    CONSTRAINT tickets_service_id_fkey FOREIGN key(service_id) REFERENCES logistic_services(id),
    CONSTRAINT tickets_carrier_id_fkey FOREIGN key(carrier_id) REFERENCES carriers(id),
    CONSTRAINT tickets_order_fk FOREIGN key(order_id) REFERENCES orders(id)
);
CREATE UNIQUE INDEX tickets_ticket_number_unique ON public.tickets USING btree (ticket_number);
CREATE INDEX ix_tickets_order ON public.tickets USING btree (order_id);
CREATE INDEX ix_tickets_status ON public.tickets USING btree (status);
CREATE INDEX idx_tickets_service_id ON public.tickets USING btree (service_id);
CREATE INDEX idx_tickets_carrier_id ON public.tickets USING btree (carrier_id);
CREATE INDEX idx_tickets_tracking_number ON public.tickets USING btree (tracking_number);
CREATE INDEX idx_tickets_status ON public.tickets USING btree (status);


CREATE TABLE users(
    id SERIAL NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    first_name text,
    last_name text,
    role text NOT NULL DEFAULT 'user'::text,
    last_login timestamp without time zone,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX users_email_unique ON public.users USING btree (email);


CREATE TABLE variants(
    id SERIAL NOT NULL,
    id_shopify text NOT NULL,
    product_id integer NOT NULL,
    sku text,
    price numeric,
    compare_at_price numeric,
    barcode text,
    inventory_qty integer,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone,
    external_variant_id text,
    PRIMARY KEY(id),
    CONSTRAINT variants_product_fk FOREIGN key(product_id) REFERENCES products(id)
);
CREATE INDEX ix_variants_product ON public.variants USING btree (product_id);
CREATE INDEX ix_variants_shopify ON public.variants USING btree (id_shopify);
CREATE INDEX ix_variants_sku ON public.variants USING btree (sku);











